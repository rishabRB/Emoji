{"version":3,"sources":["logo.svg","components/Emojis/Emojis.js","components/MainSection/mainsection.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["EmojiContainer","styled","div","Emo","span","Button","button","Emoji","symbol","useState","copyText","setcopyText","text","onClick","MainSectionContainer","MainContainer","Heading","SearchContainer","Search","input","HeadingSectionWrapper","EmojiSectionWrapper","MainSection","EmojiData","setEmojiData","searchQuery","setSearchQuery","finalEmoji","setfinalEmoji","useEffect","data","filter","emoji","title","toLowerCase","includes","value","placeholder","onChange","e","target","map","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0psKAAe,I,iDCKTA,EAAeC,IAAOC,IAAR,+RAiBdC,EAAIF,IAAOG,KAAR,4GAQHC,EAAOJ,IAAOK,OAAR,sRAkCGC,EAdD,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACZ,EAA6BC,mBAAS,QAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACI,mCACG,eAACX,EAAD,WACI,cAACG,EAAD,UAAMK,IACN,cAAC,kBAAD,CAAiBI,KAAMJ,EAAvB,SACA,cAACH,EAAD,CAAQQ,QAAS,kBAAIF,EAAY,WAAjC,SAA6CD,YCnDtDI,EAAqBb,IAAOC,IAAR,sKAUpBa,EAAcd,IAAOC,IAAR,gOAabc,EAAQf,IAAOC,IAAR,iNAaPe,EAAgBhB,IAAOC,IAAR,iPAkBfgB,EAAOjB,IAAOkB,MAAR,gRAoBNC,EAAsBnB,IAAOC,IAAR,iJAUrBmB,EAAoBpB,IAAOC,IAAR,kKAsDVoB,EA1CK,WACjB,MAA+Bb,mBAAS,IAAxC,mBAAOc,EAAP,KAAiBC,EAAjB,KACA,EAAmCf,mBAAS,IAA5C,mBAAOgB,EAAP,KAAmBC,EAAnB,KACA,EAAiCjB,mBAAS,IAA1C,mBAAOkB,EAAP,KAAkBC,EAAlB,KAEFC,qBAAU,WACHL,EAAaM,KACb,IAGPD,qBAAU,WACHD,EAAcL,EAAUQ,QAAO,SAACC,GAAD,OAAUA,EAAMC,MAAMC,cAAcC,SAASV,SAC9E,CAACA,IAUN,OACO,mCACI,cAACX,EAAD,UACI,eAACC,EAAD,WACC,eAACK,EAAD,WACE,cAACJ,EAAD,2BACA,cAACC,EAAD,UACA,cAACC,EAAD,CAAQkB,MAAOX,EAAaY,YAAY,cAAcC,SAdlD,SAACC,GAChBb,EAAea,EAAEC,OAAOJ,MAAMF,uBAiBnB,cAACb,EAAD,UACKM,EAAWc,KAAI,SAACT,GAAD,OAAS,cAAC,EAAD,CAAOxB,OAAQwB,EAAMxB,sBC7HtDkC,EARF,WACT,OACI,mCACG,cAAC,EAAD,OCOIC,EATL,WACR,OACE,mCACC,cAAC,EAAD,OCKUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c8cae3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {React,useState} from 'react'\nimport styled from 'styled-components'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\n\n\nconst EmojiContainer=styled.div`\nwidth:150px;\nheight:200px;\nborder-radius:20px;\nbackground:#010606 ;\nmargin:20px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nflex-direction: column;\n\n@media screen and (max-width:468px){\n    width: 120px;\n    height: 150px;\n}\n\n`\nconst Emo=styled.span`\nfont-size:50px;\n\n@media screen and (max-width:468px){\n    font-size:40px\n}\n`\n\nconst Button=styled.button`\nwidth:80px;\nheight:30px;\nbox-sizing: border-box;\nmargin:20px;\nmargin-bottom:-30px;\npadding: 0 5px;\nbackground:#111;\ncolor:#1b7;\nfont-weight: 600;\nborder-radius: 20px;\nborder: 0;\ntext-transform: uppercase;\n\n&:hover{\n    color:#fff\n}\n\n`\n\nconst Emoji = ({symbol}) => {\n    const [copyText,setcopyText]=useState('copy')\n    return (\n        <>\n           <EmojiContainer>\n               <Emo>{symbol}</Emo>\n               <CopyToClipboard text={symbol}>\n               <Button onClick={()=>setcopyText('Copied')}>{copyText}</Button>\n               </CopyToClipboard>\n              </EmojiContainer>\n        </>\n    )\n}\n\nexport default Emoji\n","import {React,useEffect,useState} from 'react'\nimport data from '../../Data/emojiList.json';\nimport Emoji from '../Emojis/Emojis'\nimport styled from 'styled-components';\n\n\nconst MainSectionContainer=styled.div`\nwidth:100%;\nheight:100vh;\nbox-sizing: border-box;\nbackground:#010606;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`\n\nconst MainContainer=styled.div`\ndisplay: flex;\nwidth:100%;\nheight:90%;\nborder-radius: 20px;\nbackground: #111;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nmargin:100px;\nbox-sizing: border-box;\n`\n\nconst Heading=styled.div`\nfont-size:40px;\nmargin: 40px 0;\ncolor: #1b7;\nfont-weight:600;\ntext-transform: uppercase;\ntext-align:center;\n\n@media screen and (max-width:468px){\n    font-size: 35px;\n}\n\n`\nconst SearchContainer=styled.div`\nposition: relative;\ndisplay: flex;\nheight:3.2rem;\nbackground: #010606;\nborder-radius: 20px;\npadding:5px 40px ;\n\n\n@media screen and (max-width:468px){\n   box-sizing:border-box;\n   margin: 0px 20px;\n}\n\n`\n\n\n\nconst Search=styled.input`\nheight: inherit;\nwidth:20rem ;\nheight:3rem;\nborder: 0;\noutline: none;\nbackground: transparent;\ncolor:#f7f7f7;\nfont-size: 1.4rem ;\ntext-indent:1rem;\ntransition: all 0.35s;\n\n@media screen and (max-width:468px){\n    width:13rem;\n}\n\n`\n\n\n\nconst HeadingSectionWrapper=styled.div`\nwidth:100%;\nheight:40%;\n\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`\n\nconst EmojiSectionWrapper=styled.div`\nwidth: 100%;\nheight:700px;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\noverflow-y: scroll;\njustify-content: center;\n\n`\n\n\nconst MainSection = () => {\n   const [EmojiData,setEmojiData]=useState([]);\n   const [searchQuery,setSearchQuery]=useState('');\n   const [finalEmoji,setfinalEmoji]=useState([])\n    \n useEffect(() =>{\n        setEmojiData(data)\n      },[])\n\n\n useEffect(()=>{\n        setfinalEmoji(EmojiData.filter((emoji)=> emoji.title.toLowerCase().includes(searchQuery)))\n    },[searchQuery])\n\n\n    const handleChange=(e)=>{\n        setSearchQuery(e.target.value.toLowerCase())\n\n     }\n \n\n\n return (\n        <>\n            <MainSectionContainer>\n                <MainContainer>\n                 <HeadingSectionWrapper>\n                   <Heading>Search Emoji</Heading>\n                   <SearchContainer>\n                   <Search value={searchQuery} placeholder=\"Search Here\" onChange={handleChange} />\n                   {/* <Lable>Search Here</Lable> */}\n                   </SearchContainer>\n                   </HeadingSectionWrapper> \n                   <EmojiSectionWrapper>\n                       {finalEmoji.map((emoji)=><Emoji symbol={emoji.symbol} />)}\n                   </EmojiSectionWrapper>        \n                  </MainContainer>\n            </MainSectionContainer>        \n        </>\n         )\n}\n\nexport default MainSection","import React from 'react'\nimport MainSection from '../components/MainSection/mainsection'\n\nconst Home = () => {\n    return (\n        <>\n           <MainSection /> \n        </>\n    )\n}\n\nexport default Home\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/home';\n\nconst App=()=>{\n  return (\n    <>\n     <Home />\n    </>\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}